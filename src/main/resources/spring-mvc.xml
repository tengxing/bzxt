<?xml version="1.0" encoding="UTF-8"?>  
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd">

  
 
    <context:component-scan base-package="com.sdut.edu.*" />
	<mvc:annotation-driven/>
	<mvc:default-servlet-handler/>
 
 	<!-- jsp配置 -->
    <!-- 视图解释类 -->  
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">  
        <property name="prefix" value="/system/"/>  
        <property name="suffix" value=".jsp"/>
        <!--可为空,方便实现自已的依据扩展名来选择视图解释类的逻辑  -->  
        
    </bean> 
 <!--  <mvc:interceptors>  
  使用bean定义一个Interceptor，直接定义在mvc:interceptors根下面的Interceptor将拦截所有的请求    
    <bean class="com.host.app.web.interceptor.AllInterceptor"/>  
    <mvc:interceptor>  
        <mvc:mapping path="/userLogin/login_in"/>  
        定义在mvc:interceptor下面的表示是对特定的请求才进行拦截的  
        <bean class="com.sdut.edu.cn.Login.interceptor.LoginInterceptor"/>  
    </mvc:interceptor>  
</mvc:interceptors>   -->
    <!-- <bean id="userDao" class="com.sdut.edu.dao.UserDao">
          <property name="sessionFactory" ref="sessionFactory"></property>
    </bean>
    <bean id="userService" class="com.sdut.edu.dao.UserService">
        <property name="userDao" ref="userDao"></property>
    </bean> -->
    
    
    <!--  hibernate4 spring mvc cacheManager, 指定ehcache.xml的位置
    <bean id="cacheManagerEhcache" class="org.springframework.cache.ehcache.EhCacheManagerFactoryBean">
        <property name="configLocation">
            <value>classpath:ehcache.xml</value>
        </property>
        由于hibernate也使用了Ehcache, 保证双方都使用同一个缓存管理器
        <property name="shared" value="true"/>
    </bean>
     -->
</beans>
 